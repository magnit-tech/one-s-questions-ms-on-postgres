// 26.11.2019 Леонов Александр - Добавил оберток для работы с Excel

#Область Получение_из_Excel

Функция ПолучитьДанныеЛистаФайлаExcel(ПутьКФайлу = "", ИмяНомерЛиста = "", ЧислоСтрокШапки = 0) Экспорт
	
	ТолькоЧтение = Истина;
	ОбъектExcel = ПолучитьОбъектExcel(ПутьКФайлу, ТолькоЧтение);
	
	Попытка
		ЛистExcel = ПолучитьЛистExcel(ОбъектExcel, ИмяНомерЛиста);
		
		ВсегоСтрок = ПолучитьЧислоСтрокЛистаExcel(ЛистExcel);
		ВсегоКолонок = ПолучитьЧислоКолонокЛистаExcel(ЛистExcel);
		НомерПервойКолонки = ПолучитьНомерПервойКолонкиЛистаExcel(ЛистExcel);
		
		ПерваяЯчейка = ПолучитьЯчейкуЛистаExcel(ЛистExcel, 1+ЧислоСтрокШапки, НомерПервойКолонки);
		ПоследняяЯчейка = ПолучитьЯчейкуЛистаExcel(ЛистExcel, ВсегоСтрок, НомерПервойКолонки + ВсегоКолонок - 1);
		
		ДанныеОбласти = ПолучитьДанныеОбластиЛистаExcel(ЛистExcel, ПерваяЯчейка, ПоследняяЯчейка);		
	Исключение
		// << 04.03.2022 Данилов Артур: AUTOOPT-1685 Закрываем объект при возникновении ошибок
		ЗакрытьОбъектExcel(ОбъектExcel);		
		ВызватьИсключение ИнформацияОбОшибке().Описание;
		// >> 04.03.2022 Данилов Артур
	КонецПопытки;
	
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		ЗакрытьОбъектExcel(ОбъектExcel);
	КонецЕсли;
	
	Возврат ДанныеОбласти;
	
КонецФункции

Функция ПолучитьДанныеВыделеннойОбластиЛистаExcel(ЧислоСтрокШапки = 0) Экспорт

	ОбъектExcel = ПолучитьОбъектExcel();
	ОбластьExcel = ПолучитьВыделеннуюОбластьExcel(ОбъектExcel);
	
	ВсегоСтрок = ПолучитьЧислоСтрокОбластиExcel(ОбластьExcel);
	ВсегоКолонок = ПолучитьЧислоКолонокОбластиExcel(ОбластьExcel);
	
	ПерваяЯчейка = ПолучитьЯчейкуАктивногоЛистаExcel(ОбъектExcel, 1+ЧислоСтрокШапки, 1);
	ПоследняяЯчейка = ПолучитьЯчейкуАктивногоЛистаExcel(ОбъектExcel, ВсегоСтрок, ВсегоКолонок);	
	
	ДанныеОбласти = ПолучитьДанныеОбластиЛистаExcel(ОбъектExcel, ПерваяЯчейка, ПоследняяЯчейка);
	
	Возврат ДанныеОбласти;	
		
КонецФункции

Функция ПолучитьОбъектExcel(ПутьКФайлу = "", ТолькоЧтение = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Возврат ПолучитьИзФайлаОбъектExcel(ПутьКФайлу, ТолькоЧтение);
	Иначе
		Возврат ПолучитьОткрытыйОбъектExcel();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОткрытыйОбъектExcel() Экспорт
	
	Попытка
		Excel = ПолучитьCOMОбъект(, "Excel.Application");
	Исключение
		ВызватьИсключение "Не установлен Excel. " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат Excel;
	
КонецФункции

Функция ПолучитьИзФайлаОбъектExcel(ПутьКФайлу, ТолькоЧтение = Ложь) Экспорт
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		ВызватьИсключение "Не установлен Excel. " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Excel.AutomationSecurity = 3;
	
	Excel.AskToUpdateLinks = Ложь; 
	Excel.DisplayAlerts = Ложь;
	
	Если Не ИТМ_ОбщегоНазначенияКлиентСервер.ФайлСуществует(ПутьКФайлу) Тогда
		ВызватьИсключение "Не найден файл " + ПутьКФайлу;
	КонецЕсли;
	
	Попытка
		Excel.Workbooks.Open(ПутьКФайлу,,ТолькоЧтение);
	Исключение
		ВызватьИсключение "Не удалось открыть файл " + ПутьКФайлу + ". " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Excel.Visible = Ложь;
	Возврат Excel;
	
КонецФункции

Функция ПолучитьЛистExcel(ОбъектExcel, ИмяНомерЛиста = "") Экспорт
	
	Если Не ЗначениеЗаполнено(ИмяНомерЛиста) Тогда
		Возврат ПолучитьАктивныйЛистExcel(ОбъектExcel);
	КонецЕсли;
	
	Если ТипЗнч(ИмяНомерЛиста) = Тип("Строка") Тогда
		Возврат ПолучитьЛистExcelПоИмени(ОбъектExcel, ИмяНомерЛиста);
	Иначе
		Возврат ПолучитьЛистExcelПоНомеру(ОбъектExcel, ИмяНомерЛиста);
	КонецЕсли;
КонецФункции

Функция ПолучитьЛистExcelПоИмени(ОбъектExcel, ИмяЛиста)
	Возврат ОбъектExcel.Sheets(ИмяЛиста);
КонецФункции

Функция ПолучитьЛистExcelПоНомеру(ОбъектExcel, НомерЛиста)
	Возврат ОбъектExcel.Sheets.Item(НомерЛиста);
КонецФункции

Функция ПолучитьАктивныйЛистExcel(ОбъектExcel)
	Возврат ОбъектExcel.ActiveSheet;
КонецФункции


Функция ПолучитьДанныеЯчейкиЛистаExcel(ЛистExcel, НомерСтроки, НомерКолонки)
	ЯчейкаExcel = ПолучитьЯчейкуЛистаExcel(ЛистExcel, НомерСтроки, НомерКолонки);
	Возврат ЯчейкаExcel.Value;
КонецФункции

Функция ПолучитьДанныеСтрокиЛистаExcel(ЛистExcel, НомерСтроки)
	
	ПерваяЯчейка = ПолучитьЯчейкуЛистаExcel(ЛистExcel, НомерСтроки, 1);
	ПоследняяЯчейка = ПолучитьЯчейкуЛистаExcel(	ЛистExcel, 
	НомерСтроки,
	ПолучитьЧислоКолонокЛистаExcel(ЛистExcel));
	
	ДанныеОбласти = ПолучитьДанныеОбластиЛистаExcel(ЛистExcel, ПерваяЯчейка, ПоследняяЯчейка);
	
	Результат = Новый Массив;
	Для Каждого Колонка Из ДанныеОбласти Цикл
		Результат.Добавить(Колонка[0]);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Получает данные колонки Excel
//
// Параметры:
//   ЛистExcel - COMОбъект - Лист полученный методом ПолучитьЛистExcelПоНомеру или ПолучитьЛистExcelПоИмени  
//   НомерКолонки - Число - Номер получаемой колонки
//
// Возвращаемое значение:
//   Массив - Массив значений колонки
//
Функция ПолучитьДанныеКолонкиЛистаExcel(ЛистExcel, НомерКолонки)
	
	ПерваяЯчейка = ПолучитьЯчейкуЛистаExcel(ЛистExcel, 1, НомерКолонки);
	ПоследняяЯчейка = ПолучитьЯчейкуЛистаExcel(	ЛистExcel, 
	ПолучитьЧислоСтрокЛистаExcel(ЛистExcel),
	НомерКолонки);
	
	Возврат ПолучитьДанныеОбластиЛистаExcel(ЛистExcel, ПерваяЯчейка, ПоследняяЯчейка)[0];													
	
КонецФункции

Функция ПолучитьДанныеОбластиЛистаExcel(ЛистExcel, ПерваяЯчейка, ПоследняяЯчейка)
	Возврат ЛистExcel.Range(ПерваяЯчейка, ПоследняяЯчейка).Value.Выгрузить();
КонецФункции

Функция ПолучитьЯчейкуЛистаExcel(ЛистExcel, НомерСтроки, НомерКолонки)
	Возврат ЛистExcel.Cells(НомерСтроки, НомерКолонки);
КонецФункции

Функция ПолучитьЯчейкуАктивногоЛистаExcel(ОбъектExcel, НомерСтроки, НомерКолонки)
	Возврат ОбъектExcel.Cells(НомерСтроки, НомерКолонки);
КонецФункции


Функция ПолучитьЧислоСтрокЛистаExcel(ЛистExcel)
	Возврат ЛистExcel.UsedRange.Rows.Count();	
КонецФункции

Функция ПолучитьЧислоКолонокЛистаExcel(ЛистExcel)
	Возврат ЛистExcel.UsedRange.Columns.Count();	
КонецФункции

Функция ПолучитьНомерПервойКолонкиЛистаExcel(ЛистExcel)
	Возврат ЛистExcel.UsedRange.Column;
КонецФункции


Функция ПолучитьЧислоСтрокОбластиExcel(ОбластьExcel)
	Возврат ОбластьExcel.Rows.Count;
КонецФункции

Функция ПолучитьЧислоКолонокОбластиExcel(ОбластьExcel)
	Возврат ОбластьExcel.Columns.Count;
КонецФункции

Функция ПолучитьВыделеннуюОбластьExcel(ОбъектExcel)
	Возврат ОбъектExcel.Selection;
КонецФункции

#КонецОбласти

#Область Изменение_Excel

Процедура ЗаписатьИзмененияОбъектаExcel(ОбъектExcel) Экспорт
	ОбъектExcel.ActiveWorkbook.Save();
КонецПроцедуры

Процедура ЗакрытьОбъектExcel(ОбъектExcel) Экспорт
	ОбъектExcel.ActiveWorkbook.Close();
	ОбъектExcel.Quit();
	ОбъектExcel = Неопределено;
КонецПроцедуры

Процедура УстановитьЗначениеЯчейкиЛистаExcel(ЛистExcel, НомерСтроки, НомерКолонки, УстанавливаемоеЗначение)
	
	ЯчейкаExcel = ПолучитьЯчейкуЛистаExcel(ЛистExcel, НомерСтроки, НомерКолонки);
	ЯчейкаExcel.Value = УстанавливаемоеЗначение;
	
КонецПроцедуры

Процедура УдалитьСтрокуЛистаExcel(ЛистExcel, НомерСтроки) Экспорт
	
	ЛистExcel.Rows(НомерСтроки).Delete();
	
КонецПроцедуры

Процедура УдалитьКолонкуЛистаExcel(ЛистExcel, НомерКолонки)
	
	ЛистExcel.Columns(НомерКолонки).Delete(-4159);
	
КонецПроцедуры

//22.04.2021 Шакун Денис: AUTOOPT-811
Процедура ОбработатьExcelПоТабличномуДокументу(ТабличныйДокумент,ПутьКФайлу,Формат) Экспорт
	Если Формат <> ТипФайлаТабличногоДокумента.XLSX Тогда //Возврат
		Возврат;
	КонецЕсли;
	
	ПараметрыОбработки = СтрРазделить(ТабличныйДокумент.ИспользуемоеИмяФайла,";");
	
	ПрименитьЗащиту = ПараметрыОбработки.Найти("protect") <> Неопределено;
	ПрименитьФильтр = ПараметрыОбработки.Найти("filter") <> Неопределено;
	
	Если НЕ ПрименитьЗащиту И НЕ ПрименитьФильтр Тогда //Возврат
		Возврат;
	КонецЕсли;
			
	Excel = ПолучитьОбъектExcel(ПутьКФайлу);
	ЛистExcel = ПолучитьЛистExcel(Excel);
	
	//Подготовка
	НомСтрокиФильтра = Неопределено;
	НомКолонкиФильтра = Неопределено;
	
	ПрименитьЗащиту = Ложь; //13.10.2022 Данилов Артур: AUTOOPT-811 // На время теста отключим, не забыть убрать.
	
	Если ПрименитьЗащиту Тогда
		ПерваяЯчейкаExcel = ПолучитьЯчейкуЛистаExcel(ЛистExcel, 1, 1);
		ПоследняяЯчейкаExcel = ПолучитьЯчейкуЛистаExcel(ЛистExcel, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
		RangeExcel = Excel.Range(ПерваяЯчейкаExcel,ПоследняяЯчейкаExcel);
		RangeExcel.Locked = 1;
	КонецЕсли;
	
	//Перебор ячеек
	Для НомСтроки = 1 По ТабличныйДокумент.ВысотаТаблицы Цикл Для НомКолонки = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл Ячейка = ТабличныйДокумент.Область(НомСтроки,НомКолонки,НомСтроки,НомКолонки); Если ПрименитьФильтр И НомСтрокиФильтра = Неопределено И СтрНайти(Ячейка.ФорматРедактирования,"filter") <> 0 Тогда НомСтрокиФильтра = НомСтроки; НомКолонкиФильтра = НомКолонки; КонецЕсли; Если ПрименитьЗащиту И НЕ Ячейка.Защита Тогда ЯчейкаExcel = ПолучитьЯчейкуЛистаExcel(ЛистExcel, НомСтроки, НомКолонки); RangeExcel = Excel.Range(ЯчейкаExcel,ЯчейкаExcel); RangeExcel.Locked = 0; КонецЕсли; КонецЦикла; КонецЦикла;
	
	//Обработка
	Если ПрименитьФильтр И НомСтрокиФильтра <> Неопределено Тогда 
		ЯчейкаExcel = ПолучитьЯчейкуЛистаExcel(ЛистExcel, НомСтрокиФильтра, НомКолонкиФильтра); 
			
		RangeExcel = Excel.Range(ЯчейкаExcel,ЯчейкаExcel); 
		RangeExcel.AutoFilter(); 
	КонецЕсли; 
	
	Если ПрименитьЗащиту Тогда
		ЛистExcel.EnableSelection = 1;//0	Все, что можно выбрать.; -4142	Ничто не может быть выбрано.; 1	Можно выбрать только разблокированые ячейки.
		ЛистExcel.Protect(Строка(Новый УникальныйИдентификатор),0,,,,1,1,1,,,,,,,1,);
	КонецЕсли;
	
	//Запись
	ЗаписатьИзмененияОбъектаExcel(Excel);
	ЗакрытьОбъектExcel(Excel);
КонецПроцедуры

#КонецОбласти

